[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "qgen"
version = "1.0.0"
description = "Generate synthetic queries for AI training using LLMs - systematic, domain-specific, and ready for production"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "QGen Contributors"}
]
keywords = ["ai", "llm", "query-generation", "synthetic-data", "chatbot", "rag", "training-data"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing :: Linguistic"
]
requires-python = ">=3.8"
dependencies = [
    "typer>=0.9.0",
    "openai>=1.0.0",
    "pydantic>=2.0.0",
    "pyyaml>=6.0.0",
    "rich>=13.0.0",
    "python-dotenv>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest >= 7.0.0",
    "pytest-cov >= 4.0.0",
    "pytest-mock >= 3.10.0",
    "black >= 22.0.0",
    "ruff >= 0.1.0",
    "bandit >= 1.7.0",
    "safety >= 2.0.0",
    "tox >= 4.0.0",
]
test = [
    "pytest >= 7.0.0",
    "pytest-cov >= 4.0.0", 
    "pytest-mock >= 3.10.0",
]

[tool.hatch.build.targets.wheel]
packages = ["src/qgen"]

[project.scripts]
qgen = "qgen.cli.main:app"

[project.urls]
Homepage = "https://github.com/your-org/qgen"
Repository = "https://github.com/your-org/qgen.git"
Issues = "https://github.com/your-org/qgen/issues"
Documentation = "https://github.com/your-org/qgen/blob/main/README.md"
Changelog = "https://github.com/your-org/qgen/blob/main/CHANGELOG.md"

[tool.black]
line-length = 88
target-version = ['py39']

[tool.ruff]
target-version = "py39"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[dependency-groups]
dev = [
    "pytest>=8.3.5",
]
